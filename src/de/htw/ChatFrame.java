/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewFrame4.java
 *
 * Created on 06.06.2012, 16:29:14
 */
package de.htw;

import java.awt.TextArea;
import java.util.LinkedList;
import java.util.Observable;
import java.util.Observer;
import java.util.Set;

import de.uni_trier.jane.basetypes.Address;

/**
 *
 * @author chrech
 */
public class ChatFrame extends java.awt.Frame implements Observer{
	
	private ChatService chatService;

    /** Creates new form ChatFrame */
    public ChatFrame() {
        initComponents();
    }
    
    public ChatFrame(ChatService chatService) {
    	this.chatService = chatService;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chatTextArea = new java.awt.TextArea("", 0, 0, TextArea.SCROLLBARS_VERTICAL_ONLY);
        chatTextArea.setEditable(false);
        messageTextField = new java.awt.TextField();
        sendButton = new java.awt.Button();
        sendButton.setActionCommand("send-msg");
        sendButton.setName("sendButton");
        contactList = new java.awt.List();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        add(chatTextArea, java.awt.BorderLayout.CENTER);
        add(messageTextField, java.awt.BorderLayout.SOUTH);

        sendButton.setLabel("send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });
        add(sendButton, java.awt.BorderLayout.NORTH);
        add(contactList, java.awt.BorderLayout.WEST);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
    	String message = this.messageTextField.getText();
    	String destination = this.contactList.getSelectedItem();
    	chatService.sendMessage(message, destination);
    	this.displayChatMessage("", destination, message); //TODO get your own Address from somewhere.
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ChatFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.TextArea chatTextArea;
    private java.awt.List contactList;
    private java.awt.TextField messageTextField;
    private java.awt.Button sendButton;
    // End of variables declaration//GEN-END:variables
    
    
    private void displayChatMessage(String sender, String message){
    	String text = "(" + sender + "): " + message + "\n";
    	chatTextArea.append(text);
    }
    
    private void displayChatMessage(String sender, String destination, String message){
    	String text = "(" + sender + "->" + destination + "): " + message + "\n";
    	chatTextArea.append(text);
    }
    
    private void updateContactList(Set<Address> contacts){
    	contactList.removeAll();
    	for(Address a: contacts){
    		contactList.add(a.toString());
    	}
    }

	@Override
	public void update(Observable o, Object arg) {
			if(o instanceof DsdvService){
				DsdvService dsdvService = (DsdvService)o;
				Set<Address> contacts = dsdvService.getAllReachableDevices();
				updateContactList(contacts);
			}else if(o instanceof ChatService){
				if(arg instanceof String[]){
					String[] messageArr = (String[])arg;
					String sender = messageArr[0];
					String message = messageArr[1];
					displayChatMessage(sender, message);
				}
			}
	}
}
